import java.util.Scanner;
/*
 * 더하기 사이클 : 1110 (브1)
 * 문제 :
 * 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다.
 * 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다.
 * 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다.
 * 다음 예를 보자.
 * 26부터 시작한다. 2+6 = 8이다.
 * 새로운 수는 68이다. 6+8 = 14이다.
 * 새로운 수는 84이다. 8+4 = 12이다.
 * 새로운 수는 42이다. 4+2 = 6이다.
 * 새로운 수는 26이다.
 * 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
 * N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.
 *
 * 입력 :
 * 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.
 *
 * 출력 :
 * 첫째 줄에 N의 사이클 길이를 출력한다.
 */
public class No1110 {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();

        if(N>=0&&N<=99){
            int i = 1;
            int D = N;
            int A, B, C;

            while(true) {
                A = D % 10;
                B = D / 10;
                C = A + B;
                if (C > 9) {
                    D = (A * 10) + (C % 10);
                    if (N != D) {
                        i++;
                    }
                    if (N == D) {
                        System.out.println(i);
                        break;
                    }
                }
                if (C <= 9) {
                    D = (A * 10) + C;
                    if (N != D) {
                        i++;
                    }
                    if (N == D) {
                        System.out.println(i);
                        break;
                    }
                }
            }
        }
    }
}
/*
* 후기 :
* While문에 true 조건을 주고,
* While문 안에서 if문 조건이 처음 값과 계산 결과 값이 같으면 현재 사이클 횟수 출력 후,
* break이 되도록 문제를 해결 하였다.
*
* 오늘 범위를 꼼꼼히 체크를 하지 못해서 문제를 많이 틀렸다.
* 제출을 하기 전에, 꼼꼼히 살펴보자
* 개발자는 꼼꼼함이 생명이다.
*/
